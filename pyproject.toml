[project]
name = "ffmpeg-worker"
version = "0.1.0"
description = "FastAPI-based worker orchestrating FFmpeg video processing and AI montage jobs."
authors = [{ name = "FFMPEG Worker Team" }]
requires-python = ">=3.11"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "fastapi>=0.112.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.3.0",
    "httpx>=0.27.0",
    "python-json-logger>=2.0.6",
    "ffmpeg-python>=0.2.0",
    "aiofiles>=23.2.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "iopaint>=1.0.0",
    "opencv-python-headless>=4.8.0",
    "Pillow>=10.0.0",
    "tqdm>=4.65.0",
    "loguru>=0.7.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "-ra"
pythonpath = ["."]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 100
select = ["E", "F", "I", "N", "UP", "B", "SIM"]
ignore = ["B008"]  # dependency injection pattern

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
warn_unused_configs = true
strict = true
ignore_missing_imports = true
